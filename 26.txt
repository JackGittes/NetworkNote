计算机网络原理笔记
局域网技术（六）
作者：赵明心    日期：2019/03/14

一个站点如果接收到<64个字节的碎片帧可以直接扔掉。

5.3.8   强化冲突

当发送数据的站一旦发现发生了冲突时，除了立即停止发送数据外，还要再继续发送若干比特的认为干扰信号(jamming signal)，以便让所有用户都知道现在已经发生了冲突。

发送数据的站要不停地检测冲突，保证能最快检测到冲突，但是这是站在站点自身的角度。由于广播延时的影响，在当前站点检测到冲突之前，冲突可能已经发生。扰码信号用于通知网络中所有站点，都能够接收到冲突。

5.4 MAC帧格式
    1、以太网MAC帧格式有两种标准
        （1）DIX Ethernet V2标准
        （2）IEEE的802.3标准
    2、最常用的MAC帧是以太网 V2的格式

5.4.1   MAC帧格式示意
    此处略去一张图。今天的网卡对两种帧格式是兼容的，802.3和以太网兼容。

    MAC帧前加8个字节前导码进入物理层。

5.4.2   以太网 V2的MAC帧格式

                                                                        IP层
                      字节     6       6         2     46~1500     4   
    以太网 V2的MAC帧         目的地址   源地址    类型      数据      FCS    MAC层
              |---前导码---|------------------MAC 帧------------------|  物理层
    
    MAC帧有18个字节的控制域和至少46字节数据域，前面6字节为目的地址，可以是三种目的地址的任何一个，单播、多播、广播都可以。而源地址必须是明确的发送方，只能是一个主机的MAC物理地址。类型域标记承载的数据类型，以太网数据附载可以是IP数据报文，可以是AIP解释报文，可以是IPX报文，同一个以太网承载不同的报文，通过类型域来区分。这样可以实现同一个MAC子层，承载多种上层网络协议，这反映了协议数据单元复用能力，一个N层可以支持多个N+1层上层。

    N层协议只能支持单个N+1协议的也有，SLIP协议就只能承载IP协议，不具有协议数据单元复用能力。类型字段与802.3的长度域字段处理起来有麻烦之处。以太网帧格式与802.3帧格式从语法上基本没有区别，但类型域的这16位在802.3代表后续数据域的长度，而以太网只表示类型，那么这时候以太网做了一些改动，因为后面至多长度为1500长度的数据域。以太网的上层网络层种类虽然很多，但不至于上万个，数量级大概是数十个到上百个。这样数据类型和数据长度可以合成在同一个16位当中。16位可以表示0~65535，可以使用左边部分代表长度，右边部分代表类型，6万的取值空间是可以容纳下这些数据的。现实中规定，超过0800h的表示类型，小于0800h的表示的就是长度。

    一个协议数据单元不能太大、不能太小，要适中。分层原则并没有给出明确答案，太大的协议数据单元在一定误码率下，数据包出错概率很大。协议数据单元过小，导致负载部分的有效信息很少。以太网的最大1500是可以的长度，那么最小为什么是46字节？控制域总长度是18个字节，数据域最小是46字节，加起来一共是64字节，这正好满足以太帧的最小帧长度要求。

    这时候还有一个问题，数据域数据是上层提交过来的，IP报文是可以出现40个字节的，上层的IP数据报文作为负载被MAC层封装的时候，内部需要补一些东西凑够46个字节。要求补充的字节不能有实际的语义作用，使得MAC帧长度满足最小长度要求。从信道的使用来讲，冗余数据没有作用，但是从以太帧有效性来说是有用的。

    最后是一个FCS域，表示帧校验和，从目标地址开始，到数据域计算出来的校验和，以太网的帧校验使用的是标准的CRC-32校验码，32表示就是校验码长度。CRC-32是国际通用的生成多项式标准，CRC的检错能力比较强但并非万能的，差错校验的结论是如果校验有错误，那一定有错误，校验出没错误仍然有一定可能性有错误，CRC-32不能提供绝对的可靠性保证。遗漏的部分在上层还会有校验。

    现实中的工业产品也没有绝对可靠的。当传输媒体的误码率为10e-8时，MAC子层可使未检测到的差错小于10e-14。

    物理层传输的MAC帧还需要添加8个字节的前导码，前导码的前7个字节是同步码，最后一个字节是帧开始定界符。为了达到比特同步，在传输媒体上实际传送的要比MAC帧还多8个字节。MAC层是看不到物理层的前导码的，在计算机外部，也就是计算机网络当中，由于没有统一时钟控制，也就意味着，各个站点之间没有保持时序同步。数据通信有同步通信和异步通信之分，同步通信在统一时钟控制下，可以完成大量数据传输，异步通信的质量一般较低，之前需要传输同步位，数据结束后还要添加停止位。异步通信中都会有同步码，除非像ATM通信，物理层通信始终处于同步状态，不需要进行同步控制，即使不处于传输状态，发送方也会一直发送空数据保证双方的同步。

    而我们的异步通信过程中，在没有数据发送的时候，没有空数据来保持同步。802.3协议的前8个字节都是同步码，以太网的7个字节是同步码，最后的开始码其实也可以认为是起到了一种同步作用。正常网络联通的情况下，前同步码有可能会丢失一两位，之所以留56位就是允许损失少量的同步位，允许接收方少接受到部分同步位，但是这并不影响后续同步关系的创建。

5.4.3   无效MAC帧
    1、数据字段的长度与长度字段的值不一致
    2、帧的长度不是整数字节
    3、用收到的帧检验序列FCS查出有差错
    4、数据字段的长度不在46～1500字节之间
    5、有效的MAC帧长度为64~1518字节之间
    6、对于检查出的无效MAC帧就简单地丢弃，以太网不负责重传丢弃的帧

    接收方尽管接收到的都是有效的MAC帧，但是我们说以太网仍然是提供不可靠的服务。首先要明确，任何接收方都不能接收错误数据，接收数据的检验是接收方单方面做的。可靠性服务一般是发送方和接收方之间的协同，也就是一种反馈机制。以太网接收方虽然不会接收错误帧，但是却不会反馈给发送方，告知对方帧错误，发送方无法获知接收方如何处理了接收到的帧，不可靠就表现在收发双方对于数据的处理及其结果没有反馈。如果接收方对于自己处理的数据都能进行反馈，发送方在看到接收方接收了错误数据的时候，双方就可以对数据传输有共同认识，这时候就可以产生可靠性的服务。

    实际上，由于发送方不负责重传，就算是有反馈，也是没有作用的，协议的特征决定了以太网是不可靠的。

5.4.4   帧间最小间隔
    1、帧间最小间隔为9.6us，相当于96 bit的发送时间
    2、一个站在检测到总线开始空闲后，还要等待9.6 us才能再次发送数据
    3、目的：为了使刚刚接收到的数据帧的站的接收缓存来得及清理，做好接收下一帧的准备

    这和之前介绍的略有不同，抢到信道之后要继续等待9.6 us，虽然看起来有信道浪费，但是从整个系统的吞吐量来看是有用的。即使一个站点连续不断抢占信道，也无法做到第二个帧和第一个帧无缝连接。这个设计也是为了实现流量控制的目的，不是发送方的问题，而是为了接收方，使得接收方来得及处理。（这就是流量控制的特点，发送方按照接收方的接收能力进行发送，这是使用停等方式进行的）

5.5 网桥
    1、网桥（Bridge）：工作在数据链路层的一种网络互连设备，它在互联的LAN之间实现帧的存储和转发
    2、根据MAC帧的目的地址对接收到的帧进行转发
    3、网桥具有过滤帧的功能，当网桥接收到一个帧时，并不是向所有的端口转发此帧，而是先检验此帧的目的MAC地址，然后再确定将该帧转发到哪一个端口。