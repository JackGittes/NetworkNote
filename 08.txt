计算机网络原理笔记 08 网络体系结构（五）
作者：赵明心	日期：2019/02/16

3.1.3   网络层（Network）
    1、在源结点与目的结点之间提供端到端的连接。（不是点到点）
    2、主要功能和服务
    （1）路由选择
    （2）数据分组转发
    （3）流量控制和拥塞控制
    （4）差错检测与恢复
    （5）审计：流量统计和记账

    网络层是通信子网的最高层次，所以通信子网提供什么样的服务就是网络层提供什么样的服务。通信子网解决的核心问题是数据的传输，在传输的过程中需要发生各种情况，例如出错、拥塞、无法找到目的结点，在这些情况下如何处理？网络层使用的是面向连接的服务就需要解决这些问题，如果是无连接的则不需要解决这些问题，根据网络层实际的服务分类，可能差异很大。

网络层有一个核心问题是路由选择，为了实现路由选择，还有一个重要的问题需要解决 —— 统一编址问题。路由选择的时候是否可以直接使用物理地址、网卡地址来进行路由转发呢？

   为了实现路由选择需要建立路由表，包含了目的地址和到目的该如何走（实际给出的是下一个传输节点的位置），如果使用网卡地址的话，最主要的问题是，对于某个目的结点，是无法确定该如何转发的，因为网卡出厂后卖往何处，被安装在哪台电脑是无法获知的，因此需要给每个结点分配一个逻辑地址，这个逻辑地址需要带有一定的地理特征，它能够表示结点的一定地理位置。例如IP地址，IP地址就是自行配置的。

   再者，对于网络的地址而言，一个区域获得的IP地址就是连续分配的，例如西安交通大学获得的IP地址就是一个连续的，北美地区和亚太地区的地址也是一段连续地址。地址的连续性带来的好处是压缩路由表。例如美国的结点向西安发送信息，并不需要知道西安的具体地址，而只需要发送到亚太地区网络的出口地址即可。这样可以简化路由表的设计和查表的开销。

   除此之外，还需要相关的协议才能实现从IP地址到物理地址的转换过程，例如ARP协议。例子，到邮局寄信，需要提供收信人地址和姓名，收信人地址相当于IP地址，收信人姓名相当于物理地址，邮局根据收信人地址确定该送往何处，信被送达收信人地址之后还需要找到对应的收信人才算是送达。这个过程对应于通信过程就是，当信息送达接收方的所在子网之前，起作用的都是IP地址，进入接收方所在的子网之后才是物理地址在起作用。最后由ARP协议转换，根据网卡地址送达接受者。

   因此要进行路由选择要先进行逻辑编址方案。

那么路由表是怎么生成的呢？

    由于路由表是不广播的，所以路由表中的信息应该是尽可能详尽的。路由表表项：
    ——————————————————————————————————
    |  目的结点/网络    |   下一个结点   |
    ——————————————————————————————————
    目的结点或者网络可能很大也可能很小，查表并不是只要命中就结束查表，因为可能存在多次命中，在多次命中的情况下需要按照一定的规则进行选择。

第二个功能数据分组转发也是网络层的一个核心功能。
    因为不是直接可达，所以要进行转发，再者还有一个问题就是数据的分段，有分段就有重组问题，包括先存储再转发。

流量控制与数据链路层的问题类似，重点介绍拥塞控制问题。
    拥塞是，网络中因为分组数量太多，造成整个网络转发性能下降的现象。拥塞的产生、解决和现实生活中堵车的情况很类似。车多未必会堵车，车少未必不堵车，堵车一般发生在路变窄的时候。对应于网络就是一个带宽较宽、一个较窄。解决就是要么提高能力要么降低需求。提高能力的成本高，而且有时候是非必要的，例如事故造成的堵车，这时候进行路面扩宽是不现实也是没有必要的。限号也是解决堵车的一种方式，ATM网络就采用了限制网络流量的方式来控制，但是这种方式会极大影响用户获得的服务质量。通常还有另外的解决策略，就是在行车的时候听广播来获取实时路况，这样就可以尽可能避免堵车。所以实际网络中，更多采用这种方案，就是在网络中增加监控点，在出现拥塞的时候减少进入网络的流量。

那么采用监控点的时候问题是，监控点设置在哪里？发生拥塞之后应该如何控制流量？
    监控点既不设在源也不设在目的，而是路由结点，因为路由结点能清楚获知流量情况。而解决拥塞需要源来解决，只有源停止发送才能减少进入网络的流量。但是源是通信子网，而实际发送数据的是用户，来自资源子网。这里就存在一个问题，通信子网向上层报告了拥塞发生的时候，需要上层来解决问题。实际上在TCP协议中，由源发现拥塞由源解决拥塞。

还有一个功能是差错检测和恢复，这个与数据链路层是相似的，但是具体算法不同。

最后一个功能是审计。
    审计的基本功能是流量统计和记账，它需要记录通信子网数据转发的情况，需要记录某个IP数据是如何转发的（例如IP定位），网络层需要提供这些功能。

要注意的是，并非五大功能都是网络层必须实现的，而且实现的程度也是没有明确要求的，但是存在一些核心功能是网络层协议必须实现的，路由选择和数据分组转发是必须实现的核心功能，后面的几个功能不同的网络层协议选择不同。

通信子网的功能介绍就到此为止，还有一些问题需要思考。我们在使用网络服务的时候实际并不需要知道通信子网的具体实现、拓扑结构以及其他各种细节。但是我们每天都可以使用网络，作为网络用户，在使用通信子网的数据传输服务的时候，必须要有承上启下的层次。

3.1.4   传输层（Transport）
    1、为源端主机到目的端主机提供可靠的、满足服务质量要求的数据传输服务。
    2、主要功能和服务
    （1）屏蔽不同通信子网的差异，使上层不受通信子网技术变化的影响
    （2）弥补资源子网和通信子网之间的差异
    （3）提供进程级的通信能力

    网络层也叫端到端，传输层也叫端到端，但是不同。网络层端到端是源结点到目的结点，传输层端到端是源主机到目的主机。两者所处的立场和角度是不同的，一个是通信子网的端到端，一个是资源子网的端到端。

    上层提出的服务质量要求，网络层有可能满足不了，这时候就需要传输层来弥补这个差异，例如在线看电影的时候实际是有带宽要求的。但是我们在进行网络点播的时候，并不获知当前网络的实际带宽情况，我们仍然可以看，这是因为传输层提供了缓冲服务。我们在一边看的时候传输层一边进行缓冲。再比如IP协议，如果上层使用了FTP协议对数据传输提出了很高的要求的时候，任何二进制位都不能发生错误。由于IP是无连接的，不提供可靠性保证，传输层的TCP协议做了大量工作来解决可靠性保证工作来弥补这个差异。

进程级通信能力
    网络层只能完成从源节点到目的结点的寻址过程，例如当我们打开多个浏览器的时候，目的地址都是我们的主机，而这个时候接收到的数据该由哪个进程进行接受呢？网络层向上提交的时候不知道该由哪个进程接受，这个时候由需要一个新的地址 —— 端口号，端口号就是传输层提供的。端口号提供了唯一的通信实体来标记由谁来接收，端口号类似于操作系统中的进程号。

    IP地址定位目的结点所在子网，物理地址定位目的主机所在位置，由端口号定位接收数据的具体进程。这样实现了进程级的通信能力。

3.1.5   会话层（Session）和表示层（Presentation）
    会话层和表示层分别是第五层和第六层。
    1、会话层：建立、管理和中止不同机器上的应用程序之间的会话。
        会话：完成一项任务而进行的一系列相关的信息交换。
    2、表示层：处理被传送数据的表示问题，即信息的语法和语义。

    要讲会话层和表示层，先讲一下应用层。因为研究体系结构需要模板，模板一个是OSI/RM模型，一个是抽象五层模型，抽象模型的底四层是一一对应的，但是抽象五层没有会话层和表示层。

3.1.6   应用层（Application）

    1、为用户的应用程序提供网络通信服务。
    2、主要功能包括：
    （1）识别并证实目的通信方的可用性
    （2）使协同工作的应用程序之间进行同步
    （3）判断是否为通信过程申请了足够的资源

    这里我们只能笼统概括应用层功能，应用层给用户提供了调用网络体系结构和服务的接口，应用层是最复杂的一层，并非是应用层协议设计复杂，而是因为协议种类繁多。不同用户要求是不一样的，点播电影、发送文件、组织网页等等。随着计算机网络的发展，不断有新协议的加入和旧协议的淘汰。

    为什么开放系统互联参考模型设计了会话层和表示层呢？既然有那么多应用层协议，那么能否对应用层的一些功能抽取出来构成一些层次。

再次回到会话层和表示层，会话方式进行的时候一般是半双工，一人说一人听，再者就是会话的恢复，例如断点续传的FTP。

表示层需要解决的是数据格式表示问题，通信子网不能保证数据是否是可理解的。例如64位计算机向32位计算机发送整数1的时候如何让对方能正确理解这是整数1，这就是表示层需要解决的。

会话层和表示层就是为了解决应用层的共性问题，但实际上大家更接受抽象五层模型，原因是一来层次多了意味着体系结构效率下降，二来实际上这些功能并非是应用层一定需要的，最后实际的这些功能不同应用实现不同。所以，现在的网络中没有会话层和表示层的对应，一般是把应用层、会话层、表示层进行合并成应用层。

3.2 OSI模型各层次功能总结

    7、应用层（报文）
    负责用户信息的语义表示。即：做什么？
    6、表示层（报文）
    解决用户信息的语法表示，即：任务怎么描述？
    5、会话层（报文）
    会话的管理和数据的同步，即：从何时、何处开始？
    4、传输层（报文）
    建立一条传输的连接，即：对方在何处？
    3、网络层（分组或包）
    选择合适的路由，即：走哪条路可到达该处？
    2、数据链路层（帧）
    在链路上无差错地传送帧，即：每一步应该怎样走？
    1、物理层（比特）
    将比特流送到物理链路上传送，即：怎样利用物理链路？

3.3 对OSI的评价
    1、OSI是20世纪80年代计算机网络技术
    2、OSI网络体系结构的核心和贡献：
        （1）分层模型，网络体系结构的研究方法
        （2）服务、接口、协议
    3、Andrew S. Tanenbaum在书中评价OSI：
        （1）糟糕的提出时机（太晚）
        （2）糟糕的技术（模型和协议都有缺陷）
        （3）糟糕的实现（庞大、笨拙、缓慢）
        （4）糟糕的策略（政府和组织的官僚）
