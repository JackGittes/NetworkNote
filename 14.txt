计算机网络原理笔记 14
数据通信技术（五）+数据链路控制（一）
作者：赵明心    日期：2019/02/22

第三章 物理层的总结
3.14    物理层的协议
3.14.1  物理层规程
    1、DTE和DCE
    （1）数据终端设备DTE（Data Terminal Equipment）是指具有一定的数据处理能力以及收发能力的数据输入/输出设备、终端设备或计算机等终端装置。
    （2）数据通信设备DCE（Data Communication Equipment），是指自动呼叫应答设备、交换机以及其它一些中间装置的集合，其作用就是在DTE和传输线路之间提供信号变换和编码的功能，并且负责建立、保持和释放数据链路连接。

    数据终端设备是计算机网络中最边缘的设备，是数据的产生者和接受者，是资源子网的设备，例如计算机。这些是看资料的时候经常遇到的名词。

3.14.2  物理层接口标准
    1、ISO/OSI关于物理层的定义：物理层提供机械的、电气的、功能的和规程的特性，目的是启动、维护和关闭数据链路实体之间进行比特传输的物理连接。这种连接可能通过中继系统，在中继系统内的传输也是在物理层的。

    2、物理层的功能：在两个网络设备之间提供透明的比特流传输。
    
    3、研究内容：物理连接的启动和关闭，正常数据的传输，以及维护管理。

    中继系统，任何介质随着距离增加，传输的信号必然会有衰减，最简单的解决方案是使用放大器和中继器，通过中继系统来连接仍然属于同一个物理层。之后在讲解网络互联的时候会详细介绍。要注意的是，中继系统的连接不属于网络互联，它的存在是为了扩大网络的地理范围。

    物理层的四个特性就是：机械特性、电气特性、功能特性、规程特性。
3.14.3  机械特性
    1、主要定义物理连接的边界点，即接插装置。规定物理连接时所采用的规格、引脚的数量和排列情况。
    2、常用的接口标准：
        （1）ISO 2110，25芯连接器，EIA RS-232-C，EIA RS-366-A
        （2）ISO 2593，34芯连接器，V.35宽带MODEM
        （3）ISO 4902，37芯和9芯连接器，EIA RS-449
        （4）ISO 4903，15芯连接器，X.20、X.21、X.22
    实际上，X开头的和V开头的多是CCITT（也即今天的ITU-U）所制定的。

3.14.4  电气特性
    1、规定传输二进制位时，线路上信号的电压高低、阻抗匹配、传输速率和距离限制。
    2、早期的标准是在边界点定义电气特性，例如EIA RS-232-C、V.28；最近的标准则说明了发送器和接收器的电气特性，而且给出了有关对连接电缆的控制。
    3、CCITT标准化的电气特性标准：
        （1）CCITT V.10....
        ..... 略去几个标准

3.14.5  功能特性和规程特性
    1、功能特性
    （1）主要定义各条物理线路的功能
    （2）线路的功能分为四大类
        a、数据
        b、控制
        c、定时
        d、地
    2、规程特性
    （1）主要定义各条物理线路的工作规程和时序关系
    （2）EIA-232-E是美国电子工业协会EIA制定的著名物理层异步通信接口标准，它最早是1962年制订的标准RS-232，其中的RS表示EIA的一种“推荐标准”，232是编号。

实际对物理层部分，不要求了解定义的规则细节，只需要了解物理层需要涉及哪些方面的标准。第三章到此结束，第三章的系统性差。

第四章  数据链路控制
    第四章围绕数据链路层展开，重点讲解：
    （1）数据链路层定义和功能
    （2）差错控制
    （3）流量控制
    （4）常用的数据链路层协议
    这里介绍的（2）（3）是数据链路层的最重要的两个功能，差错控制和流量控制在不同层次实现技术的方法大同小异，在本章会详细介绍这两种，在后面的时候会直接使用本章的概念，重点讨论在网络实例和协议中的流量和差错控制的具体实现。在本章结束重点介绍HTLC和PPP两个数据链路层的常见协议。

4.1 为什么要设计数据链路层？
    物理层和数据链路层都是解决点到点的问题，物理层解决二进制位流的透明传输，为什么还要设计数据链路层？
    1、在原始的物理传输线路上传输数据信号是有差错的，存在一定误码率，因此需要加强物理层功能，以对上层呈现处一条无差错的点到点传输。
    2、设计数据链路层的目的就是在任何有差错的线路上，进行无差错传输。向网络层提供高质量的服务。
    3、从网络参考来看，物理层之上的各层都有改善数据传输质量的要求，数据链路层是重要的一层。

    上层的工作一定要以数据链路层的工作为基础。它是为了解决物理层残留的可靠性问题。

4.1.1   定义和功能
    1、要解决的问题：如何在有差错的线路上，进行无差错的传输
    2、ISO关于数据链路层的定义：数据链路层的目的是为了提供功能上的和规程上的方法，以便建立、维护和释放网络实体之间的数据链路。
    3、数据链路：从数据发送点到数据接收点（点到点，point to point）所经过的传输途径。

    数据链路就是对物理链路增加了适当的控制，呈现出无错链路。

4.1.2   虚拟数据通路、实际数据通路
    对于网络层的角度来说，网络层认为数据传递给数据链路层之后就能解决数据的传输包括二进制位传输的问题，以及传输介质控制、信道使用权等问题。

4.1.3   分组和帧的关系

    Sending Machine                          Receiving Machine
    ________________                     ______________________
         Packet                                Packet
    ________________                     ______________________
           |                                          |
           |                                 Frame    |
           |                                          |
    _________________________________________ >> _________
    |  Header  |  Payload Field |  Trailer |
    ________________________________________
    
    二进制位流组装成了帧，对数据增加了协议控制信息，数据链路层最特殊，特殊在一般的层次协议控制信息在前面，而数据链路层的一部分协议控制信息在尾部。
    
    简单地说，为了保证提供了一条无错链路，数据位流增加了一些控制信息，组装成了帧。上层的分组和下层的帧之间有封装关系。

4.2 数据链路层基本功能
    1、数据链路控制规程
        为了是数据能迅速、正确、有效地从发送点到达接收点所采用的控制方式
    2、数据链路层协议应提供的最基本功能
        （1）数据在数据链路上的正常传输（建立、维护、释放）
        （2）帧定界（帧同步）
        （3）差错控制
        （4）流量控制
        （5）寻址
    早期的数据链路层协议通常就成为数据链路控制规程。

4.2.1   数据链路层协议的位置
    以路由器为例看一下数据链路层的工作。任何一个路由器来讲都对应了物理层和数据链路层。路由器接受二进制位流之后，送到数据链路层的实体，实体可能是一个数据链路层的软件进程也可能是一个硬件的接口。

    数据链路层实体首先做的工作是帧同步，划分帧的起始位置，按照数据链路的规定就可以知道目的地址，确认目的地址是否对应自己的端口，如果是，则处理，如果不是则丢弃。

    此处略去一张图。

    第二个工作是差错的检测，检查帧是否出错，如果出错则丢弃，如果无错则继续处理。也即提取分组，并送给网络层进程。例如送到了IP进程，IP进程也对分组进行处理，最典型的是进行路由选择，然后根据选择结果选择出口链路，并发送到对应接口的数据链路层，数据链路实体重新对数据进行封装，再通过接口、物理层向外发送，发送前可能需要排队。

    这就是中间结点进行转发的过程。特别注意的是，通常对于一个端口来讲，无论是路由器、网卡等，物理层和数据链路层通常绑定在一起，例如网卡经常就是解决物理层和数据链路层的问题。

4.2.2   数据链路层
    任何一个层次给上层提供服务的时候都有两种，数据链路层通常把无连接服务也进行分类。
    数据链路层为网络层提供三种基本服务：
    1、无确认无连接服务
        由上层完成差错控制，适合于误码率低、实时性要求高的场合，如大部分有线局域网。
    2、有确认无连接服务
        进行简单的差错控制。适用于不可靠的信道，如无线网。
    3、面向连接确认服务
        在发送前需要建立连接，保证了帧的正确按序传输，适合于可靠性要求较高的场合，适用于大多数广域网。
        
    无确认是不需要预先建立连接，同时发送方给接收方发送数据的时候，不需要接收方对是否接收做出应答，这时候发送方其实是无法知道数据是否到达了接收方。发送方只要最后一位离开发送结点，就认为发送过程结束。

    有确认服务，需要接收方对已接收进行确认，这种方式的可靠性更高。面向连接确认服务代价最高，在广域网中数据链路层经常需要面向连接。

    确认的概念简单的说是接收方对发送方做出应答。工作的流程是，发送方发出数据之后，例如A发送数据，数据传输过程中，数据可能到达B也可能没有到达B，同时有可能正确到达也可能错误到达，如果确认了正确到达，则结束。

4.2.3   应答方式
    1、正向应答：只对正确的信息应答
    2、负向应答：只对错误的信息应答
    3、双向应答：既对正确的信息应答，也对错误的信息应答

    问题1：在数据链路层，最长采用哪种应答方式？
    问题2：在数据传输过程中，数据会出现哪些情况？

    在数据链路层应该采取哪种应答方式？数据链路层不能使用负向应答，而网络中双向应答也用的比较少，用的最多的是正向应答。三种情况中，正确到达的概率是最高的，例如有线网络中出错是小概率事件，丢失也是小概率事件，数据不会莫名其妙消失，一般是因为地址等原因导致被丢弃。

4.2.4   正向应答工作方式
    此处又略去一张图。是三种情况

    正常数据传送——————————数据帧丢失或出错——————————应答帧丢失

    应答的本质是对序号进行应答，帧当中存在一个序号字段，告知接收方当前数据的编号，应答数据包含应答序号，如应答信号为0，即表示已经正确接受0号帧。发送方收到应答之后，知道数据已经正确到达，这时候数据缓冲区可以释放给其他数据。
    
    发送方如何识别数据丢失或出错？发送方在发送数据之前，启动计时器，如果计时器超时，则认为数据丢失或者出错，最简单的方式就是重新发送。超时计时器的时间不能太长或者太短，太长降低效率，太短有可能没有到达，对于一般情况定时时间是最远两个结点端到端传输时延的两倍。

    应答帧也包含了三种情况，正确到达、出错、丢失。对于出错和丢失都认为是丢失。如果发送方数据正确到达了接收方，接收方的应答帧丢失了，这时发送方的计时器也会超时，那么发送方会重发。这个时候接收方很可能就接收到了重复帧，按道理接收方需要向高层按序提交数据，也要保证没有重复。一般的解决是，在接收方有一个信息，即期望接收序号，当接收到0之后，期望序号变为1，接收到1，期望需要变为2。如果接收方接收到了一个与期望不符合的数据，有两种情况，一个是重复帧，一个是期望帧的后续帧（中间帧出现了丢失）。
    
    这时候接收方需要确认帧是否是重复还是后续？按照序号大小？

    注意的是，邮件系统使用的是典型的负向应答，负向应答存在什么问题呢？思考。