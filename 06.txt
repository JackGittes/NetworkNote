计算机网络原理 06 网络体系结构（三）

3.1	接口和服务

在计算机网络分层结构中，每一层的功能的本质都是在为它的上层提供服务。

3.1.1	服务
服务（Service）：（n）实体向（n+1）实体提供的功能集合，包括：
	（1）(n)实体自己提供的某些功能
	（2）从(n-1)层及以下各层的本地系统得到的服务
	（3）通过与对等实体通信得到的服务

	服务就是一组功能的集合。服务的提供者和用户，第三层直接服务提供者就是第二层，间接的服务提供者就是以下的各层。

	有两种服务的描述方法：（1）基于空间的描述（2）基于时间的描述

3.1.2	服务访问点(SAP)，也即接口
	服务访问点（Service Access Point）:
	（1）任何层间服务是在接口的SAP上进行的
	（2）每个SAP有唯一的识别地址
	（3）每个层间接口可以有多个SAP

	下层可能提供多种服务选择，例如TCP/UDP，上层在传输的时候可以选择TCP和UDP。同一个访问点可能对应多次执行和实例。

3.1.3	数据单元 Data Unit
	网络体系结构服务的本质就是数据的传输，传输的内容就是数据单元。
	1、在网络中信息传送的单位，称为数据单元
	（1）对等实体在协议的控制下交换信息
	（2）相邻层实体按服务交换信息
	2、数据单元包括：
	（1）协议数据单元：PDU
	（2）接口数据单元：IDU
	（3）服务数据单元：SDU

	数据单元的生存期与名字相关。
	协议数据单元是三个数据单元中最重要的。

3.1.3.1	协议数据单元
	定义：不同系统的对等实体为实现该层的协议所交换的信息单位。
	PDU的具体格式是：
	---------------------
	| PCI  |  用户数据  |
	---------------------

	（1）PCI（协议控制信息）：为了实现本层的协议而添加的一些控制信息。加在前面好还是好？变长好还是定长好？绝大多数协议都是把协议控制信息放在前面，为什么放在前面效率高？
	因为数据传输是串行传输的，计算机网络也是串行的，也即越靠前的数据越早到达接收方，这样可以更快的做出反应，尤其是在网络层以上的协议都会把控制信息放在前面，数据链路层的检错码放在了后面。控制信息是固定的好还是非固定的好呢？绝大多数网络的协议控制信息是固定的，因为固定格式的数据对于发送方和接收方来说处理程序相对简单，对网络资源的消耗少。固定方式的灵活性差，增删字段非常难。例如IPV4协议，存在一个不处理的字段，这些字段虽然一直被传输，但是不会被处理，v4协议留了一段可选项给后来协议发展留空间，但是实际上并没有利用到预留的字段。

	协议控制信息当然是越少越好，这样用户信息的有效比例会更高（满足基本功能的前提下）。
	（2）用户数据为提供服务而传送的信息。
	
	（3）考虑到协议的要求，如时延、效率等因素，PDU的大小一般都有一定的长度要求。绝大多数情况下，协议都会规定协议数据单元的最大数据长度。例如目前使用最广的以太网，以太网的数据最大长度为1518个字节。1518=1500+18,1500为用户数据长度。当数据大于1500字节的时候需要分段，分段的后续问题就是重组。对于IP协议而言还存在有效数据的最短要求，也即64字节，针对10M以太网而言。
	当小于最小长度的时候该如何处理呢？（1）短报文合并（2）填充。第一种方式一般不会用，因为短报文合并的时候协议控制信息就会变得复杂，需要增加字段用于区分数据的边界，而且无法预计下一个短报文的到达时间，基于这样的原因选择填充的方式来进行。
	
	协议数据封装过程？

	不同层的协议数据单元有什么关系呢？n+1层的协议数据单元和n层的协议数据单元有什么对应关系呢？如果上层提交的数据满足下层的数据长度要求的话，下层的用户数据部分就是上层的协议数据单元。数据传送过程是不断膨胀的，称为封装过程。下层在传输的时候又要加上自己的控制信息。

	举例：用户使用FTP协议，使用该协议上传文件，假设ftp不对文件做任何处理，ftp是整个网络体系的最高层(应用层),ftp在调用的是TCP协议，TCP会给ftp数据加报头，ftp数据封装在TCP协议的报文当中才能发送。TCP向下继续调用IP协议，而IP协议是通信子网的最高层协议，需要负责数据在不同网络之间的递交，所以IP协议会检查下层通信网络的MTU(最大传输单元)，以以太网为例，需要查看数据是否满足1500字节，如果不满足，假如偏大，那么就会对数据分成段，每段增加IP分组头。
	IP下层对应就是网络的实体，例如以太网卡，以太网卡对数据再次进行封装。而数据链路层非常特殊，不仅加数据在前还要在后面增加数据，我们称为帧头和帧尾。
	
	接受侧是逐层解封的过程，例如根据帧尾校验码来计算帧是否传输错误，帧是否需要递交给高层。同时根据帧头的地址信息决定是否处理。之后提交给IP协议，IP协议会检查数据是否被分段，并且按照发送方的递交的长度和顺序再提交给上层。

	为了研究方便，每层的协议数据单元的名字都有特定的名字。例如网络层的数据单元称为分组，而数据链路层的协议数据单元被称为帧。通过网络交换数据单元的名字可以判断网络基于哪一层，例如帧中继是基于数据链路层的。

	之后讲解任何具体网络协议的时候都是以协议数据单元为线索讲解，协议数据单元的控制信息，语法语义、时序，可以了解协议的实现过程。

3.1.3.2	接口数据单元(IDU)
	同一系统的相邻层实体的一次交互中，经过层间接口的信息单元。

	IDU的具体格式如下：
	-----------------------
	| ICI  |  接口数据    |
	-----------------------

	（1）ICI（接口控制信息）是协议在通过层间接口时，添加的一些控制信息，如通过多少字节或要求的服务质量等。
	（2）ICI只对PDU通过接口是有作用。
	（3）接口数据为通过接口进行传送的信息内容。
	接口数据单元在数据传递到下层的时候接口控制信息就被丢弃，但不是不加处理的丢弃，例如寄信的时候要求寄挂号信，邮局会按照用户的要求用挂号信方式传送。因此上次调用下层的服务，要求下层进行实现的时候，无需知道下层的实现细节，只需要利用接口控制信息调用相应的服务。

3.1.3.3	服务数据单元(SDU)
	上层服务用户所要求传递的数据单元。

	由于SDU的大小一般都有一定的长度要求。因此，PDU的用户数据部分可能是经过分段或合并的SDU。
	            ----------------------
	            |      （n）SDU      |
	            ----------------------
		      /                 \
	             /                   \
	------------------    ------------------
	| (n)PCI |       |    | (n)PCI |       |
	------------------    ------------------

	服务数据单元和协议数据单元的用户数据部分类似，上层的协议数据单元站在本层来讲就是服务数据单元。三种数据单元的关系需要一张更复杂的图，此处略去了。


3.2	服务分类
	1、面向（基于）连接的服务
	例如打电话，随着连接的建立开始，连接关闭即释放资源。
	（1）传送数据时，首先建立连接，然后使用该连接传送数据，使用完后，关闭连接。
	（2）特点：可靠、顺序性好，缺点是资源消耗大、成本高	

	2、无连接的服务
	例如寄信。
	（1）直接使用服务传送数据，每个包独立进行路由选择。
	（2）特点：不可靠、顺序性差

	各有优缺点，每个层次在提供服务的时候都会根据需求提供面向连接的和无连接的，例如在TCP/IP协议中的传输层，既提供了面向连接的TCP又提供了无连接的UDP，上层应用进程根据需求选择，例如FTP选择TCP，而DNS、SNMP选择了UDP。
	每一层向上层提供什么服务和本层获得什么样的服务没有关系，而且每一层可能同时提供两种服务。
