计算机网络原理笔记 18
数据链路控制（五）
作者：赵明心    日期：2019/02/27

全部重发从接收方来说是简单的，但是对信道浪费是很大的。选择重发虽然节约信道带宽，但是要求接收方的缓冲区足够大，以至于能够装得下最够多的后续帧。对于缓冲区而言，从操作系统的角度，有静态和动态分配两种方式，静态分配对于进程来说好处是资源可预计，但是浪费大。所以绝大多数情况下，操作系统倾向于使用动态分配。

因此这两种策略其实都存在问题，动态分配的情况下无法满足缓冲区的足够大要求。单工停等协议在适应缓冲区动态分配，提高信道利用率上都存在问题。

接收方有缓冲区为4时，发送方在未收到应答之前可以连续发送的帧数目是4个。能不能发送5个？不能，有可能发生死锁。例如发送五个帧，期望的是0，但是1\2\3\4到达，这样就导致0到达之后无法占用缓冲区，而1\2\3\4由于等待0也无法发送。

4.5.5   滑动窗口协议
    滑动窗口协议是现代计算机网络中最常用的流量控制协议，TCP协议中就是用了滑动窗口协议。
    1、滑动窗口协议是对连续停等协议的改进。它能够控制已发送但未确认的数据帧的个数（滑动窗口的大小）
    2、发送窗口
    （1）窗口尺寸：允许连续发送未应答帧的个数
    （2）数据允许发送条件：上界-下界 < 窗口尺寸
    （3）窗口滑动条件：
        a、窗口上界移动：发送数据帧
        b、窗口下界移动：收到应答帧
    协议为什么被称为滑动窗口协议？很多资料在描述滑动窗口协议的时候，都会使用一个圆形，例如r=3，圆上顺时针标注1~7，首先发送窗口尺寸一般情况下应该与缓冲区的数量一致。此时定义两个概念，上界（前沿）、下界（后沿）。上界表示下一个发送序号，下界是下一个应答序号。

    系统初始的时候，上界和下界都是0。此时开始发送数据，数据编号取上界编号，发送序号为0的帧，下一个发送序号变为1，相当于上界滑动一个位置，从0滑到1。紧接着发送序号为1的帧、2帧、3帧。注意此时需要有一个条件，当发送了第四个帧的时候，上界-下界已经为4，这个时候不满足数据发送条件，不能再发送。

    这个时刻如果收到了应答，应答可以是单帧应答，也可以是成批应答。例如收到应答A3，那么下界滑动三个位置，如果收到了A0，下界滑动一个位置。注意，下界移动是一个或多个帧的移动。上界的移动只能是单帧移动。滑动窗口协议的基本原理就是如此。流量控制主要就是在控制发送方，使得发送方能按照接收方的接收方的能力进行发送。这时候可以很好的解决动态分配缓冲区的问题。

    对接收方来说，同样需要一个窗口，通过这个窗口也可以解决一个问题，那就是当收到一个帧的时候，该帧和期望序号不一致，这个帧是重发帧还是后续帧？在用循环的时候，帧的大小不能区分顺序。四个缓冲区，只能存储三个帧。

    滑动窗口协议（接收窗口）
    允许连续接收未处理帧的多少。窗口仍然有一个尺寸。
    1、接收窗口
    （1）窗口尺寸：允许连续接收未处理帧的个数
    （2）数据允许接收的条件：数据序号落在接收窗口中
    （3）窗口滑动的条件
        发送应答帧之后上下界同时移动
    数据接收条件是信号落在接收窗口中。当窗口尺寸是4，在初始状态下，满足下界≤序号<上界。接收的序号是0~3，当发送应答帧之后（可能是单帧或者成批），这个时候上下界一起移动，例如发送A0，上下界全部移动1。上界和下界哪个代表期望序号？下界！下界值实际就是期望序号。如果接收到序号为下界的时候说明可以处理，如果不是下界，也即非期望序号，接下来判断是否在窗口中，如果在窗口中说明是后续帧，可以存储。这两种情况都不满足的时候，认为是重复帧，丢弃。

    这就是接收方滑动窗口的工作原理。发送窗口的尺寸取决于接收方的接收能力。现在讲的窗口尺寸是固定的，对应于静态缓冲区，如果缓冲区大小是动态的，这个时候就是可边尺寸的滑动窗口协议。接收方需要随时告知发送方其接收能力的大小。

    当A给B发送信号的时候，A向B请求缓冲区数量为4，这时候B返回应答，告知A只能分配两个缓冲区。此时A发送D0和D1，此时B返回期望序号为2，同时告知A缓冲区变为1。A此时只能发送单个帧D2，之后B再次应答，返回期望序号A3，同时告知A此时接收方现在能力又发生变化，缓冲区变为0。这个时候，A无法继续发送，必须等待，等到某个时刻，接收方B有了足够的缓冲区，那么B再次发送应答信号A3并告知有缓冲区，A可以继续发送。

    实际中，滑动窗口的大小是在动态变化的，变化的依据是B的反馈信息。当接收方没有可用缓冲区的时候，就必须进入等待直到接收方再次通知发送方有缓冲区可用为止。但是，这时有个问题，如果接收方对缓冲区为0的反馈信息发生丢失怎么办？这时候会导致死锁，因为接收方的缓冲区为0的消息未能到达发送方，而发送方还会继续发送。后续在讲解TCP协议的时候还会详细介绍丢失的处理。

    窗口大小与序号关系
    1、出错全部重传
        （1）W(T)>W(R),W(R)=1
        （2）W(T)≤2^n-1
    2、选择性重传
        （1）W(T)=W(R)
        （2）W(T)≤2^(n-1)
    W(T)是发送窗口，W(R)是接受窗口。全部重传，满足第一个式子可以防止应答帧丢失之后的重发。                                                                       
4.6 常用的数据链路层协议
    下面以具体的数据链路层协议为例进行分析。
    1、面向字符的链路层协议
    （1）ISO的IS1745，基本型传输控制规程及其扩充部分（BM和XBM）
    （2）IBM的二进制同步通信规程（BSC）
    （3）DEC的数字数据通信报文协议（DDCMP）
    （4）PPP —— Point-to-Point Protocol，Internet协议
    2、面向比特的链路层协议
    （1）IBM的SNA使用的数据链路协议SDLC（Synchronous Data Link Control protocol）
    （2）ANSI修改SDLC，提出ADCCP(Advanced Data Communication Control Procedure)
    （3）ISO修改SDLC，提出HDLC（High-level Data Link Control）
    （4）CCITT修改HDLC，提出LAP（Link Access Procedure）作为X.25网络接口标准的一部分，后来改为LAPB。

    SDLC出现于上个世纪的7、8十年代，由于当时同时有但处理机为核心的多终端联机系统和分布式系统，所以SDLC兼顾了两种网络体系结构。现在用的很多协议都是HDLC的简化和变形版本。

    我们接触的第一个具体协议就是HDLC协议，分析协议的思路有哪些？简单说有三方面。
    第一是分析概貌，首先协议是为了解决什么问题，协议在解决问题的思路和基本特征。第二个方面是以协议数据单元为线索，分析协议的具体实现。第三部分就是知道了概貌和协议数据单元格式之后，看一下网络中的问题是如何解决的。

4.6.1   高级数据链路控制规程HDLC
    1、HDLC的组成
    （1）帧结构（语法）
    （2）规程元素（语法）
    （3）规程类型（语义）
    （4）使用HDLC的语法可以定义多种具有不同操作特点的链路层协议
    2、HDLC的描述
    （1）数据站：主站、次站、组合站
    （2）链路构型：平衡型和非平衡型
    （3）操作模式：正规响应模式，异步响应模式，异步平衡模式

    主站和次站成对出现，单主机核心，中央主机是主站，终端是次站。分布式网络都是组合站。简单的说，集中式控制属于非平衡型控制，分布式为平衡型控制。对于平衡型来说，只有异步平衡模式，每个站点自主通信，是自治系统。对于（主站和次站）非平衡型来说，正规响应模式下次站必须受到主站控制，没有主站许可的时候不可以主动发起数据传输。如果次站可以主动发起传输，就是异步响应模式。

4.6.2   HDLC的帧结构
    1、定界符
    （1）01111110
    （2）空闲的点到点线路上连续传定界符，说明物理连接已经建立，能够建立数据链路
    2、地址字段（Address）
    （1）多终端线路，用来区分终端
    （2）点到点线路，有时用来区分命令和响应
        a、若地址是接收该帧站的地址，则该帧是命令帧
        b、若地址是发送该帧站的地址，则该帧是应答帧