计算机网络原理笔记 19
数据链路控制（六）
作者：赵明心    日期：2019/02/28

HDLC协议的帧结构

HDLC协议是面向比特的，HDLC协议主要解决数据链路层的基本功能，链路管理、寻址、帧同步、流量控制、差错控制。HDLC还有一个特征是，它面向平衡与非平衡系统，即针对分布式和集中式。

帧格式：
    比特      8         8        8        可变              16             8
           标志F     地址A    控制C     信息Info    帧检验序列FCS      标志F

HDLC帧包含了6个字段，先看首尾的标志字段，帧首和帧尾都是01111110。这种首尾标志是进行帧同步的，划分帧的边界，确定起始和终止位置。第二部分是地址字段，地址字段设计包含了缺陷，不管是数据链路层还是高层协议，现在都是包含源和目的地址。但是HDLC只包含了终端地址，也即目的的地址，因为HDLC面向集中式的一个特性，集中式中中央主机是不变的，所以不需要中央地址。而且地址位只有8位，只能描述256个位置。而以太网中的协议，有6个字节，48位地址，远大于HDLC。

第三个字段较为复杂。第四个字段是上层的用户数据部分，要注意此处的信息字段是可变的，没有给出长度要求。不过一般情况下，缺省长度是1500字节。帧检验序列字段，数据链路层协议最常用CRC，HDLC也是用了CRC，HDLC使用了CCITT标准，而且是16阶，现在常用的是32阶的多项式。

这五个字段，控制字段有四个，包含一下功能，帧同步使用带填充位的首尾标志，差错检测使用的是CRC校验，并且是16阶多项式。
还有两大问题没有解决，一个是链路的管理，链路的使用和分配。再者是流量控制未涉及，最后是差错的恢复没有涉及。通过分析控制字段，来看一下控制字段是否解决了剩余的问题。

HDLC帧的类型
1、帧类型
（1）信息帧（Information）：完成信息传送
（2）监控帧（Supervisory）：差错控制和流量控制
（3）无序号帧（Unnumbered）：链路控制管理

2、控制字段
（1）帧的类型及相应的信息用控制域的字段表示
（2）信息帧：
    a、序号（Seq）：滑动窗口技术，3位序号，发送窗口大小为7
    b、捎带确认（Next）：下一个希望接收到的帧
    c、探询、结束P/F位（Poll/Final）

    下面看帧类型如何在控制字段体现。对应于三种帧的类型，控制字段的前两位来区分.0X表示信息帧，10表示监控帧，11表示无序号帧。发送方通过控制前两位来使接收方识别帧类型。在信息帧中，NS是发送序号，占据三位序号，表示0~7循环使用，NR表示捎带确认（附载应答，不是单独应答）的序号。
        信息帧：0 N(S) P/F N(R)
    要注意此处的滑动窗口的尺寸是固定的，双方不需要经常协商接收能力，发送方固定设置发送窗口为7。
    
    三种类型的帧中都有一个P/F位，这个位是为了非平衡型的网络，由主站控制，P表示主站发给次站，F表示次站发给主站。如果主站发送一个帧，P=1，且ADR=1，表示第一个次站被轮询，询问次站1是否有数据发送。如果此时次站1需要发送信息，那么这1次站获得信道使用权，这个时候次站如发送3个帧，那么前两个帧的F=0，第三个帧F=1，F表示通信传输结束，这个时候主站就可以轮询下一个次站。

    非平衡系统的控制就是通过P/F，在平衡通讯中，P/F的含义是信息需要立即处理不能等待。

（3）监控帧

    第二个类型的帧，监控帧比较重要，要求实现差错控制和流量控制。
        监控帧：10 S  P/F N(R)
    S字段的组合含义，S字段有两位，对应于四种组合。
    （1）类型0表示确认帧RR(RECEIVE READY)，接收准备确认
    （2）类型1表示否定性确认帧REJ（REJECT），对应于出错全部重传
    （3）类型2表示接收未准备好RNR（RECEIVE NOT READY）
    （4）类型3表示选择拒绝SREJ（SELECTIVE REJECT）

    HDLC和ADCCP允许选择拒绝，SDLC和LAPB不允许。

    确认帧RR，表示之前的帧全部正确接受，并且期望接收N（R）。否定确认帧表示N(R)之前的帧已收到，并且要求重传N（R）及其之后的所有帧。接收未准备好帧，表示接收方未准备好接收。选择拒绝帧是表示错误收到了N(R)帧，要求只重传N(R)帧。

    注意检验字段已经完成了差错的检测，此处的监控帧是为了进行差错的恢复，都属于差错控制功能。更详细一点，HDLC使用双向应答，收到正确数据返回0，收到错误发送1，但是通信过程中不会同时出现1和3。协议在制定之前，就商定了是使用类型1还是类型3，不能同时使用两种出错的重发方式。

    流量控制通过类型0和类型2来完成，因为HDLC是固定窗口的，没有足够能力接收的时候，接收方发送类型2的帧，发送方此时停止发送，直到收到类型0的帧才会继续发送。这就是HDLC完成差错控制和流量控制的原理。

（4）无序号帧
    1、无序号帧
    （1）可以用来传控制信息，也可在不可靠无连接服务中传数据
    （2）Type和Modifier联合表示不同类型的无序号帧
    2、命令
    （1）DISC（DISConnect）
    （2）SNRM（Set Normal Response Mode）
    （3）SARM（Set Asynchronous Response Mode）
    （4）SABM（Set Asynchronous Balanced Mode）
        HDLC和LAPB使用
    （5）FRMR（FRaMe Reject）
    （6）无序号确认UA（Unnumbered Acknowledgement）
        对控制帧进行确认，用于确认模式建立和接受拆除命令
    （7）UI（Unnumbered Information）

    实际无序号帧最后有5位，可以表示32种控制信息，但是并没有完全用到。

4.6.3   HDLC的补充说明
    HDLC的格式定义已经不符合现代主流计算机网络，但是现在的很多链路协议是HDLC的简化和变形。
    HDLC的功能组合：
    1、三种站，两种构型，三种操作模式，以及规程元素中定义的各种帧的各种组合产生多种链路层协议。
    2、HDLC定义了选择构成链路层协议的良序结构：
        选择站构型 ———> 基本操作模式 ———> 基本帧种类 ———> 12种任选功能 ———> 得到协议
        平衡/非平衡      异步/正规...      4选3           

    802.2逻辑链路控制子层协议和PPP协议也是HDLC协议的变形。

4.6.4   协议工程
    这部分讲一下在工作中如何设计协议，该怎么做才能保证编制的协议是可靠的，考虑了所有可能因素，不会出现死锁等等。

    1、协议工程
        （1）协议说明（Protocol Specification）
        （2）协议验证（Protocol Verification）
        （3）协议实现（Protocol Implementation）
        （4）协议测试（Protocol Testing）
            a、一致性测试（Conformance Testing）
            b、互操作性测试（Interoperability Testing）
            c、性能测试（Performance Testing）

    协议说明需要进行需求分析和功能设计，知道协议在什么环境下使用。验证需要验证是否考虑到了所有情况，是否存在死循环等等。一旦验证设计的协议是正确的，就可以进行实现（包括软硬件的）。协议说明是很重要的环节。

    2、协议说明
    必须既定义一个协议实体提供给它的用户的服务，又定义该协议实体的内部操作。

    实现和测试都需要按照协议的说明来进行。

4.6.5   协议说明与验证
    1、自然语言描述协议的缺点
    冗余、多义性、结构性不好、不便于自动验证、测试、实现
    2、常用的形式化方法
    （1）有限状态机FSM
    （2）形式化语言模型
        LOTOS、Estelle、SDL
    （3）Petri网
        扩展：时间Petri网，随机Petri网，高级Petri网
    （4）过程代数（Process Algebra）
        扩展：随机过程代数
    之后常用的是（1）（3）

4.6.6   有限状态机
    FSM认为协议其实就是网络中状态的变化，且状态是有限的。
    1、一个有限状态机是一个四元组（S，M，I，T）
        S是状态的集合，M是标号的集合，I是初始状态的集合，T是变迁的集合
    2、通信协议的建模
        （1）基本出发点：认为通信协议主要是由响应多个“事件”的相对简单的处理过程组成
        （2）事件：命令（来自用户）、信息到达（来自低层）、内部超时
    优点：简单明了，比较精确
    缺点：对复杂的协议，事件数和状态数会剧增，处理困难

    下面以信道有错情况下的单工停等协议来看如何用FSM描述。
    此处略去。
